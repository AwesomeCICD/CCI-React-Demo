version: 2.1

orbs:
  docker: circleci/docker@2.0.3
  gcp-cli: circleci/gcp-cli@2.4.0
  node: circleci/node@2.0.0
  snyk: snyk/snyk@1.1.2

workflows:
  build-test-and-approval-deploy:
    jobs:
      - lint_and_prettify
      - build:
          requires:
            - lint_and_prettify
      -  Snyk_E:
          requires:
            - build
      - node/test:
          version: 17.2.0
          requires:
            - build
      - hold:
          type: approval
          requires:
            - node/test
            - Snyk_E
      - build-and-push-image:
          requires:
            - hold
          filters:
            branches:
              only:
                - docker_gcp
      - deploy_image_to_gcp:
          context: 
            - work_gcp
          requires:
            - build-and-push-image
          filters:
            branches:
              only:
                - docker_gcp

jobs:
  lint_and_prettify:
    docker: 
      - image: cimg/node:17.2.0
    resource_class: medium

    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package-lock.json" }}
      - run: npm ci
      - run: sudo npm i -g eslint prettier --unsafe-perm=true --allow-root
      - run: eslint src/*.js && prettier --check "src/*.js"
      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules
          key: npm-deps-{{ checksum "package-lock.json" }}

  Snyk_E: 
    docker:
      - image: cimg/node:17.2.0
    steps:
      - checkout
      - run: npm ci
      - run: npm run build
      - snyk/scan

  build:
    docker: 
      - image: cimg/node:17.2.0
    resource_class: medium

    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package-lock.json" }}
      - run: npm ci
      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules
          key: npm-deps-{{ checksum "package-lock.json" }}

  build-and-push-image:
    executor: docker/machine
    steps:
      - checkout
      - docker/check:
          docker-username: DOCKERHUB_USERNAME
          docker-password: DOCKERHUB_PASSWORD
      - docker/build:
          image: dvcastillo37/cci-react-demo
          tag: gcp-demo
      - docker/push:
          image: dvcastillo37/cci-react-demo
          tag: gcp-demo

  deploy_image_to_gcp:
    executor: docker/machine
    steps: 
      - docker/pull:
          images: "dvcastillo37/cci-react-demo:gcp-demo"
      - gcp-cli/install
      - run:
          command: gcloud version
          name: Verify GCP CLI was installed
      - gcp-cli/initialize
      - run: 
          command: gcloud auth configure-docker $GOOGLE_COMPUTE_REGION-docker.pkg.dev
          name: "Authenticate into GCP registry"
      - run:
          command: docker tag dvcastillo37/cci-react-demo:gcp-demo $GOOGLE_COMPUTE_REGION-docker.pkg.dev/$GOOGLE_PROJECT_ID/cci-react-demo/cci-react-demo:gcp-demo
          name: "Tag the recently pulled image to GCP Registry"
      - run:
          command: docker push $GOOGLE_COMPUTE_REGION-docker.pkg.dev/$GOOGLE_PROJECT_ID/cci-react-demo/cci-react-demo:gcp-demo
          name: "Push image to GCP registry"
