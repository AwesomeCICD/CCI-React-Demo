version: 2.1

orbs:
  heroku: circleci/heroku@1.2.6
  node: circleci/node@2.0.0
  snyk: snyk/snyk@1.1.2
  aws-ecr: circleci/aws-ecr@8.0.0
  # aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@2.0.1

workflows:
  build-test-and-approval-deploy:
    jobs:
      - lint_and_prettify
      - build:
          requires:
            - lint_and_prettify
      -  SAST:
          requires:
            - build
      - node/test:
          version: 17.2.0
          requires:
            - build
      - aws-ecr/build-and-push-image:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          path: /project
          region: AWS_DEFAULT_REGION
          registry-id: AWS_ECR_REGISTRY_ID
          repo: DemoECRRepo
          requires:
            - node/test
            - SAST
          tag: 'test'
      # - hold:
      #     type: approval
      #     requires:
      #       - node/test
      #       - SAST
      # - heroku/deploy-via-git:
          # requires:
          #   - hold
      # - deploy:
      #     requires:
      #       - hold
      #     filters:
      #       branches:
      #         only:
      #           - main

jobs:
  lint_and_prettify:
    docker: 
      - image: cimg/node:17.2.0
    resource_class: medium

    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package-lock.json" }}
      - run: npm ci
      - run: sudo npm i -g eslint prettier --unsafe-perm=true --allow-root
      - run: eslint src/*.js && prettier --check "src/*.js"
      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules
          key: npm-deps-{{ checksum "package-lock.json" }}

  SAST: 
    docker:
      - image: cimg/node:17.2.0
    steps:
      - checkout
      - run: npm ci
      - run: npm run build
      - snyk/scan

  build:
    docker: 
      - image: cimg/node:17.2.0
    resource_class: medium

    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package-lock.json" }}
      - run: npm ci
      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules
          key: npm-deps-{{ checksum "package-lock.json" }}

  # If deploying to AWS: create new Beanstalk environment & update below and .elasticbeanstalk/config.yml
  # deploy:
  #   working_directory: ~/src
  #   docker:
  #     - image: cimg/node:17.2.0
  #   steps:
  #     - checkout
  #     - run:
  #         name: Installing deployment dependencies
  #         working_directory: /
  #         command: |
  #           sudo apt-get -y -qq update
  #           sudo apt-get install python3-pip python3-dev build-essential
  #           sudo pip3 install awsebcli

  #     - run:
  #         name: Deploying
  #         command: eb deploy $AWS_EBS_ENV